a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:'';content:none}table{border-collapse:collapse;border-spacing:0}*{box-sizing:border-box}body,html{height:100%;width:100%;margin:0;padding:0;overflow:hidden;-webkit-font-smoothing:antialiased}body{background:url(../img/background.jpg) no-repeat center;background-size:cover;font-family:Arial,sans-serif}div,li{transition:all .2s ease-in-out}body,html{height:100%;width:100%;margin:0;padding:0;float:left;-webkit-font-smoothing:antialiased}*{box-sizing:border-box}.wrapper{max-width:95%;margin-left:auto;margin-right:auto}.wrapper:after{content:" ";display:block;clear:both}.nav_wrapper{margin-top:5px;margin-bottom:5px}.page-wrap{min-height:100vh}.query_container{width:100%}.header{clear:both;width:100%;float:left;margin-left:0;margin-right:0;float:left;background-color:#fff;-webkit-box-shadow:0 2px 8px rgba(0,0,0,.8)}.logo_container{width:16.66667%;float:left;cursor:pointer;text-decoration:none;font-family:korolev,sans-serif;font-weight:700;min-width:115px;transition:all .2s ease-in-out}.logo_container:hover{transform:scale(1.1)}.logo_container .logo{width:8.33333%;float:left;width:50px;margin:5px 10px 0 0}.logo_container div{margin:15px 0}.logo_container div h1{font-size:.7em;color:#d35b60;margin-left:5px}.logo_container div span{font-size:.7em;color:#c0afaf}@media (min-width:768px){.logo_container{min-width:115px;padding:5px}.logo_container div{margin:15px 0}.logo_container div h1{font-size:1.2em}.logo_container div span{font-size:.8em}}@media (min-width:1024px){.logo_container div{margin:15px 0}.logo_container div h1{font-size:1.5em}.logo_container div span{font-size:1em;color:#c0afaf}}.nav{width:66.66667%;float:right;margin-right:0;margin-top:20px}.nav li{width:29.41176%;float:left;text-align:center;font-size:.6em;font-family:korolev,sans-serif;color:#bfbbbb;cursor:pointer;margin-top:0;transition:all .2s ease-in-out}.nav li:nth-child(3n+1){margin-left:0;margin-right:-100%;clear:both;margin-left:0}.nav li:nth-child(3n+2){margin-left:35.29412%;margin-right:-100%;clear:none}.nav li:nth-child(3n+3){margin-left:70.58824%;margin-right:-100%;clear:none}.nav li:hover{color:#00a699}@media (min-width:768px){.nav li{padding:5px;font-size:1em;margin-top:5px}}@media (min-width:1024px){.nav li{font-size:1.5em;margin-top:-5px}}.nav_active{font-weight:700;color:#7d7e7f}.footer{background:linear-gradient(#333,#000);font-family:'Source Code Pro',monospace;font-weight:300;font-size:.75em;clear:both;width:100%;float:left;margin-left:0;margin-right:0}.footer div:nth-child(2){margin-left:15%}.footer-container{max-width:95%;margin-left:auto;margin-right:auto;padding:20px}.footer-container:after{content:" ";display:block;clear:both}.footer-container p{color:#fff;text-align:center}.footer-container span{margin-top:5px}.result{width:100%;float:left;margin-bottom:3px;background-color:rgba(255,255,255,.5);padding:0 5px 3px 0;transition:all .2s ease-in-out}.result .result_img{width:38.23529%}.result .result_title{width:100%;-webkit-box-shadow:0 3px 10px rgba(0,0,0,.05);color:#7d7e7f}.result .result_title h2{width:100%;font-size:1.2em;padding:15px}.result .result_title span{font-size:.7em;margin-left:5px;font-family:Arial,sans-serif;font-weight:400}.result .result_address{padding-top:10px;width:70%;max-width:135px;font-size:.9em}.result_content{width:55.88235%;margin-left:5px;float:right}.rating_container{width:100%;font-size:.8em;color:#7d7e7f;float:left;margin-bottom:10px;padding-bottom:10px}.rating_container .rating{float:left;margin-right:10px}.rating_container .price{float:right}.results{float:left;width:100%;height:100vh;background-color:#fff;opacity:.88;font-family:korolev,sans-serif}.results:hover{opacity:1}@media (min-width:1024px){.results{width:500px}}.results--search{width:100%;padding:5px}.results--search .search_input{width:100%;padding:15px 10px;border:1px solid #7d7e7f;border-radius:20px}.results--search input[type=text]:focus{border-color:#ff5a5f;outline:0}.result--catagories{float:left;width:16.66667%;float:left;height:100vh;background-color:#fff;border-right:solid 5px #00a699}@media (min-width:1024px){.result--catagories{width:25%;float:left}}.result--options{width:83.33333%;float:right;margin-right:0;float:left;background-color:rgba(255,255,255,.8);height:100vh;overflow-y:scroll}@media (min-width:1024px){.result--options{width:75%;float:right;margin-right:0}}.result_icon{float:left;width:100%;font-family:korolev,sans-serif;width:20.58824%;float:left}.result_icon:nth-child(4n+1){margin-left:0;margin-right:-100%;clear:both;margin-left:0}.result_icon:nth-child(4n+2){margin-left:26.47059%;margin-right:-100%;clear:none}.result_icon:nth-child(4n+3){margin-left:52.94118%;margin-right:-100%;clear:none}.result_icon:nth-child(4n+4){margin-left:79.41176%;margin-right:-100%;clear:none}.interactive .fa{color:#00a699;cursor:pointer}.interactive .fa span{font-size:.6em;text-align:center}.review_container{float:left;width:100%;clear:both;padding-top:10px;margin-top:10px;border-top:1px solid #000}.icon{float:left;margin:10px 8.33333%;width:83.33333%;max-width:65px;max-height:65px;cursor:pointer;transition:all .2s ease-in-out}@media (min-width:768px){.icon{margin:15px 26.66667%}}@media (min-width:1024px){.icon{margin:15px 24.16667%}}.icon h6{text-align:center;margin-bottom:10px;font-size:.5em}@media (min-width:768px){.icon h6{font-size:1em}}.icon circle,.icon line,.icon path,.icon polygon,.icon polyline,.icon rect{transition:all .2s ease-in-out}.icon:hover circle,.icon:hover line,.icon:hover path,.icon:hover polygon,.icon:hover polyline,.icon:hover rect{stroke:#ff5a5f}.cta{width:100%;padding:15px 0;float:left;margin-top:15px}.cta .directions{width:50%;float:left;border:1px solid #00a699;padding:2px;text-decoration:underline;cursor:pointer}.cta .uber{width:47.05882%;float:right;text-decoration:none}.cta .uber .uber_icon{height:20px;width:20px;margin-left:10px}.cta .uber h6{float:right;font-size:.7em;text-align:center;margin:5px 20px 0 0;color:#7d7e7f}.marker{width:100%}.marker_title{font-size:1em;font-weight:700}.marker_address{width:60%;margin-bottom:15px}.marker_tele{text-decoration:none}#stars_container{position:relative;width:89px;height:15px;float:left}#starsBar{background-image:url(../img/star-rating.png);height:15px;width:0;overflow:hidden;background-repeat:no-repeat;margin-top:-3px;transition:all .2s ease-in-out}.map_container{width:58.33333%;float:left;position:relative;width:100%;height:300px;margin-right:0;transition:all .1s;opacity:1}@media (min-width:768px){.map_container{height:400px}}@media (min-width:1024px){.map_container{width:calc(100% - 500px);float:right;height:100vh}}#map{position:absolute;width:96%;height:85%;left:10px;top:20px;border:9px solid;border-color:rgba(0,0,0,.5);opacity:.97}@media (min-width:768px){#map{left:20px}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
