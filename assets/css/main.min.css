.header,.query_container,body,html{width:100%}.icon,.result,div{transition:all .2s ease-in-out}.icon h3,.nav li{text-align:center}a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font:inherit;vertical-align:baseline}.footer,.nav li{font-size:.75em}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:'';content:none}.footer-container:after,.wrapper:after{content:" ";display:block}table{border-collapse:collapse;border-spacing:0}body,html{height:100%;margin:0;padding:0;float:left;-webkit-font-smoothing:antialiased}*{box-sizing:border-box}.wrapper{max-width:98%;margin-left:auto;margin-right:auto}.header,.nav{margin-right:0}.wrapper:after{clear:both}.nav_wrapper{margin-top:5px;margin-bottom:5px}.page-wrap{min-height:100vh}.header{clear:both;margin-left:0;float:left;background-color:#CFD1CD}.logo_container{width:8.33333%;float:left;cursor:pointer}.logo_container .logo{clear:both;width:100%;float:left;margin-left:0;margin-right:0;max-width:60px;min-width:50px}.nav{width:91.66667%;float:right;margin-top:20px}.nav li{width:33.33333%;float:left;padding:10px}.footer,.results{width:100%;float:left}.nav li:nth-child(3n+1){margin-right:-100%;clear:both;margin-left:0}.nav li:nth-child(3n+2){margin-left:33.33333%;margin-right:-100%;clear:none}.nav li:nth-child(3n+3){margin-left:66.66667%;margin-right:-100%;clear:none}.footer{background:linear-gradient(#333,#000);font-family:'Source Code Pro',monospace;font-weight:300;clear:both;margin-left:0;margin-right:0}.result,.result--catagories,.result--options,.results{background-color:#fff}.footer div:nth-child(2){margin-left:15%}.footer-container{max-width:98%;margin-left:auto;margin-right:auto;padding:20px}.footer-container:after{clear:both}.footer-container p{color:#fff;text-align:center}.footer-container span{margin-top:5px}.results{height:100vh}@media (min-width:1024px){.results{width:500px}}.results--search{width:100%;padding:5px}.results--search .search_input{width:100%;padding:15px 10px;border:1px solid #484848;border-radius:20px}.results--search input[type=text]:focus{border-color:#FF5A5F;outline:0}.result--catagories{width:16.66667%;float:left;height:100vh}@media (min-width:1024px){.result--catagories{width:25%;float:left}}.result--options{width:83.33333%;margin-right:0;float:left;height:100vh;overflow-y:scroll}@media (min-width:1024px){.result--options{width:75%;float:right;margin-right:0}}.result{width:99%;padding:15px;margin-bottom:3px;float:left}.result:hover{background-color:#fefefe;transform:scale(1.02)}.result .result_img{width:20.58824%}.result .result_copy{width:73.52941%;margin-left:5px;float:right}.result .result_title{font-size:1.25em}.result .result_address{padding-top:10px;width:70%;max-width:135px;font-size:.9em}.icon{float:left;text-indent:-999999px;overflow:hidden;border-radius:50%;background-color:#FF5A5F;margin:5px 23%;background-repeat:no-repeat;background-position:center;background-size:80%;width:65px;height:65px;cursor:pointer}.active,.icon:hover{background-size:100%}.icon h3{margin-bottom:10px}.icon--one{background-image:url(../img/icon_attractions.png)}.icon--two{background-image:url(../img/icon_cafe.png)}.icon--three{background-image:url(../img/icon_dinning.png)}.icon--four{background-image:url(../img/icon_nightlife.png)}.icon--five{background-image:url(../img/icon_grocery.png)}.icon--six{background-image:url(../img/icon_gas.png)}.active{background-color:#00A699}.map_container{float:left;width:100%;height:300px;margin-right:0;transition:all .1s}@media (min-width:768px){.map_container{height:400px}}@media (min-width:1024px){.map_container{width:calc(100% - 500px);float:right;height:100vh}}#map{width:100%;height:100%}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
