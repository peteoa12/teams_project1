.header,.query_container,body,html{width:100%}.header,.wrapper:after{clear:both}.cta .uber h6,.footer-container p,.icon h6,.nav li{text-align:center}#starsBar,.icon,.result,div,li{transition:all .2s ease-in-out}a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font:inherit;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1;background:url(../img/background.jpg) center no-repeat;background-size:cover;font-family:Arial,sans-serif}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:'';content:none}.footer-container:after,.wrapper:after{content:" ";display:block}table{border-collapse:collapse;border-spacing:0}body,html{overflow:hidden;height:100%;margin:0;padding:0;float:left;-webkit-font-smoothing:antialiased}.logo_container div,.nav_wrapper{margin-top:5px}.logo_container,.nav li{padding:5px;font-family:korolev,sans-serif;cursor:pointer}*{box-sizing:border-box}.wrapper{max-width:95%;margin-left:auto;margin-right:auto}.nav_wrapper{margin-bottom:5px}.page-wrap{min-height:100vh}.header{margin-left:0;margin-right:0;float:left;background-color:#fff;-webkit-box-shadow:0 2px 8px rgba(0,0,0,.8)}.logo_container{width:25%;float:left;text-decoration:none;font-weight:700;min-width:115px}.logo_container .logo{margin-right:5px;width:8.33333%;float:left;max-width:50px;min-width:50px}.logo_container div h1{font-size:1.5em;color:#d35b60;margin-left:5px}.logo_container div span{font-size:1em;color:#c0afaf}.nav{width:58.33333%;float:right;margin-right:0;margin-top:20px}.nav li{width:33.33333%;float:left;font-size:1.5em;color:#bfbbbb}.footer,.result{width:100%;float:left}.nav li:nth-child(3n+1){margin-right:-100%;clear:both;margin-left:0}.nav li:nth-child(3n+2){margin-left:33.33333%;margin-right:-100%;clear:none}.nav li:nth-child(3n+3){margin-left:66.66667%;margin-right:-100%;clear:none}.nav_active{font-weight:700;color:#7d7e7f}.footer{background:linear-gradient(#333,#000);font-family:'Source Code Pro',monospace;font-weight:300;font-size:.75em;clear:both;margin-left:0;margin-right:0}.footer div:nth-child(2){margin-left:15%}.footer-container{max-width:95%;margin-left:auto;margin-right:auto;padding:20px}.footer-container:after{clear:both}.footer-container p{color:#fff}.footer-container span{margin-top:5px}.result{margin-bottom:3px;background-color:rgba(255,255,255,.5);padding:0 5px 3px 0}.result .result_img{width:38.23529%}.result .result_title{width:100%;-webkit-box-shadow:0 3px 10px rgba(0,0,0,.05);color:#7d7e7f}.result .result_title h2{width:100%;font-size:1.2em;padding:15px}.result .result_title span{font-size:.7em;margin-left:5px;font-family:Arial,sans-serif;font-weight:400}.result .result_address{padding-top:10px;width:70%;max-width:135px;font-size:.9em}.result_content{width:55.88235%;margin-left:5px;float:right}.rating_container{width:100%;font-size:.8em;color:#7d7e7f;float:left;margin-bottom:10px;padding-bottom:10px}.rating_container .rating{float:left;margin-right:10px}.rating_container .price{float:right}.result--catagories,.result--options,.results{float:left;height:100vh}.results{width:100%;background-color:#fff;opacity:.88;font-family:korolev,sans-serif}.results:hover{opacity:1}@media (min-width:1024px){.results{width:500px}}.results--search{width:100%;padding:5px}.results--search .search_input{width:100%;padding:15px 10px;border:1px solid #7d7e7f;border-radius:20px}.results--search input[type=text]:focus{border-color:#FF5A5F;outline:0}.result--catagories{width:16.66667%;background-color:#fff;border-right:solid 5px #00A699}@media (min-width:1024px){.result--catagories{width:25%;float:left}}.result--options{width:83.33333%;margin-right:0;background-color:rgba(255,255,255,.8);overflow-y:scroll}@media (min-width:1024px){.result--options{width:75%;float:right;margin-right:0}}.result_icon{font-family:korolev,sans-serif;width:20.58824%;float:left}.result_icon:nth-child(4n+1){margin-right:-100%;clear:both;margin-left:0}.result_icon:nth-child(4n+2){margin-left:26.47059%;margin-right:-100%;clear:none}.result_icon:nth-child(4n+3){margin-left:52.94118%;margin-right:-100%;clear:none}.result_icon:nth-child(4n+4){margin-left:79.41176%;margin-right:-100%;clear:none}.interactive .fa{color:#00A699;cursor:pointer}.interactive .fa span{font-size:.6em;text-align:center}.review_container{float:left;width:100%;clear:both;padding-top:10px;margin-top:10px;border-top:1px solid #000}.icon{float:left;margin:10px 8.33333%;width:83.33333%;max-width:65px;max-height:65px;cursor:pointer}@media (min-width:768px){.icon{margin:15px 26.66667%}}@media (min-width:1024px){.icon{margin:15px 24.16667%}}.icon h6{margin-bottom:10px;font-size:.5em}@media (min-width:768px){.icon h6{font-size:1em}}.cta{width:100%;padding:15px 0;float:left;margin-top:15px}.cta .directions{width:50%;float:left;border:1px solid #00A699;padding:2px;text-decoration:underline;cursor:pointer}.cta .uber,.marker_tele{text-decoration:none}.cta .uber{width:47.05882%;float:right}.cta .uber .uber_icon{height:20px;width:20px;margin-left:10px}.cta .uber h6{float:right;font-size:.7em;margin:5px 20px 0 0;color:#7d7e7f}.marker{width:100%}.marker_title{font-size:1em;font-weight:700}.marker_address{width:60%;margin-bottom:15px}#stars_container{position:relative;width:89px;height:15px;float:left}#starsBar{background-image:url(../img/star-rating.png);height:15px;width:0;overflow:hidden;background-repeat:no-repeat;margin-top:-3px}.map_container{float:left;position:relative;width:100%;height:300px;margin-right:0;transition:all .1s;opacity:1}@media (min-width:768px){.map_container{height:400px}}@media (min-width:1024px){.map_container{width:calc(100% - 500px);float:right;height:100vh}}#map{position:absolute;width:96%;height:85%;left:20px;top:20px;border:9px solid;border-color:rgba(0,0,0,.5);opacity:.97}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
